{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/templates/index.js","webpack:///./src/components/tags.js","webpack:///./src/components/article.js"],"names":["Page","context","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","className","style","marginBottom","to","BlogIndex","data","location","pageContext","siteTitle","site","siteMetadata","title","siteDescription","description","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","pageQuery","Tag","tag","kebabCase","icon","faTags","Tags","tags","Article","key","margin","date","rhythm","boxShadow","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"6FAAA,qCAqCeA,IAlCF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEZC,EAIED,EAJFC,iBACAC,EAGEF,EAHFE,aACAC,EAEEH,EAFFG,gBACAC,EACEJ,EADFI,cAEF,OACE,yBAAKC,UAAS,cACZ,uBAAGC,MAAO,CAACC,aAAc,IACvB,sCACQJ,EADR,OAC6BC,IAG/B,4BAEI,4BACCH,GACC,kBAAC,OAAD,CAAMO,GAAIP,EAAkBI,UAAS,qBAArC,UAIHH,GACC,4BACE,kBAAC,OAAD,CAAMM,GAAIN,EAAcG,UAAS,oBAAjC,c,kCC3BZ,0HA2BeI,UAnBG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAkBP,EAAKI,KAAKC,aAAaG,YACzCC,EAAQT,EAAKU,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQV,SAAUA,EAAUK,MAAOH,EAAWK,YAAaD,GACzD,kBAAC,IAAD,CAAKD,MAAM,QACVG,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CAASH,KAAMA,EAAMP,MAAOA,OAGhC,kBAAC,IAAD,CAAYhB,QAAWY,MAOtB,IAAMe,EAAS,c,oCC7BtB,kFASMC,GATN,oBASY,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OACV,4BACE,kBAAC,OAAD,CAAMrB,GAAE,SAAWsB,IAAUD,GAArB,KACN,kBAAC,IAAD,CAAiBE,KAAMC,MADzB,IACqCH,MAa1BI,IARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,wBAAI7B,UAAS,QACT6B,GAAQ,IAAIZ,KAAI,SAAAO,GAAG,OACnB,kBAACD,EAAD,CAAKC,IAAKA,U,yDCpBhB,6DAiCeM,IA5BC,SAAC,GAAD,IAAGZ,EAAH,EAAGA,KAAMP,EAAT,EAASA,MAAT,OACd,6BAASoB,IAAKb,EAAKE,OAAOC,MACxB,gCACE,uBAAGpB,MAAO,CAAE+B,OAAQ,IAClB,+BAAQd,EAAKC,YAAYc,OAE3B,wBACEhC,MAAO,CACLC,aAAcgC,YAAO,MAGvB,kBAAC,OAAD,CAAMjC,MAAO,CAAEkC,UAAU,QAAWhC,GAAIe,EAAKE,OAAOC,MACjDV,IAGL,kBAAC,IAAD,CAAMkB,KAAMX,EAAKC,YAAYU,QAE/B,iCACE,uBACEO,wBAAyB,CACvBC,OAAQnB,EAAKC,YAAYN,aAAeK,EAAKoB,YAInD","file":"component---src-templates-index-js-8321629be33b874ce7c0.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Page = ({ context }) => {\n  const {\n    previousPagePath,\n    nextPagePath,\n    humanPageNumber,\n    numberOfPages,\n  } = context\n  return (\n    <div className={`pagination`}>\n      <p style={{marginBottom: 0}}>\n        <span>\n          Page {humanPageNumber} of {numberOfPages}\n        </span>\n      </p>\n      <ul>\n        \n          <li>\n          {previousPagePath && (\n            <Link to={previousPagePath} className={`pagination-before`}>前のページ</Link>\n            )}\n          </li>\n        \n        {nextPagePath && (\n          <li>\n            <Link to={nextPagePath} className={`pagination-after`}>\n              次のページ\n            </Link>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default Page\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Article from \"../components/article\"\nimport Pagination from \"../components/pagination\"\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const siteDescription = data.site.siteMetadata.description\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle} description={siteDescription}>\n      <SEO title=\"TOP\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <Article node={node} title={title} />\n        )\n      })}\n      <Pagination context = {pageContext} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD HH:mm\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport kebabCase from 'lodash/kebabCase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\"\n\nimport \"./layout.css\"\nimport \"./tags.css\"\n\nconst Tag = ({ tag }) => (\n  <li>\n    <Link to={`/tags/${kebabCase(tag)}/`}>\n      <FontAwesomeIcon icon={faTags} /> {tag}\n    </Link>\n  </li>\n)\n\nconst Tags = ({ tags }) => (\n  <ul className={`tag`}>\n    {(tags || []).map(tag => (\n      <Tag tag={tag} />\n    ))}\n  </ul>\n)\n\nexport default Tags\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Tags from \"../components/tags\"\nimport { rhythm } from \"../utils/typography\"\n\nconst Article = ({ node, title }) => (\n  <article key={node.fields.slug}>\n    <header>\n      <p style={{ margin: 0 }}>\n        <small>{node.frontmatter.date}</small>\n      </p>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 2),\n        }}\n      >\n        <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n          {title}\n        </Link>\n      </h3>\n      <Tags tags={node.frontmatter.tags} />\n    </header>\n    <section>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </section>\n    <hr />\n  </article>\n)\n\nexport default Article\n"],"sourceRoot":""}